{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Basu\\\\Documents\\\\GitHub\\\\Grootmart\\\\client\\\\src\\\\components\\\\CheckoutForm\\\\PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport CheckoutContext from \"../../context/checkout/checkoutContext\";\nimport ProductContext from \"../../context/product/productContext\";\nimport { Typography, Button, Divider } from \"@material-ui/core\";\nimport { Elements, CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { commerce } from \"../../lib/commerce\";\nimport Review from \"./Review\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet stripeKey;\n\nif (process.env.NODE_ENV !== \"production\") {\n  stripeKey = process.env.REACT_APP_STRIPE_PRIVATE_KEY;\n} else {\n  stripeKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\n}\n\nconst stripePromise = loadStripe(\"pk_test_51JO0sMHHJ4wHPkUIyGozD6odMhaZeYXuOXos3a5cuSTGjIoj9hwy8BKqw4wOdvEwla8otJ7CpJpSncusQAYyeVTY00MtdnuORg\");\nconsole.log(process.env.NODE_ENV);\nconsole.log(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({\n  checkoutToken,\n  nextStep,\n  backStep,\n  shippingData\n}) => {\n  _s();\n\n  const checkoutContext = useContext(CheckoutContext);\n  const productContext = useContext(ProductContext);\n  const {\n    setOrder,\n    setErrorMessage\n  } = checkoutContext;\n  const {\n    refreshCart\n  } = productContext;\n\n  const handleSubmit = async (event, elements, stripe) => {\n    event.preventDefault();\n    if (!stripe || !elements) return;\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement\n    });\n\n    try {\n      const orderData = {\n        line_items: checkoutToken.live.line_items,\n        customer: {\n          firstname: shippingData.firstName,\n          lastname: shippingData.lastName,\n          email: shippingData.email\n        },\n        shipping: {\n          name: \"International\",\n          street: shippingData.address1,\n          town_city: shippingData.city,\n          county_state: shippingData.shippingSubdivision,\n          postal_zip_code: shippingData.zip,\n          country: shippingData.shippingCountry\n        },\n        fulfillment: {\n          shipping_method: shippingData.shippingOption\n        },\n        payment: {\n          gateway: \"stripe\",\n          stripe: {\n            payment_method_id: paymentMethod.id\n          }\n        }\n      }; // onCaptureCheckout(checkoutToken.id, orderData);\n      // Handle capture checkout\n\n      const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        try {\n          const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n          setOrder(incomingOrder);\n          refreshCart();\n        } catch (error) {\n          setErrorMessage(error);\n        }\n      };\n\n      handleCaptureCheckout(checkoutToken.id, orderData);\n      nextStep();\n    } catch (err) {\n      console.error(`${error}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Review, {\n      checkoutToken: checkoutToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      style: {\n        margin: \"20px 0\"\n      },\n      children: \"Payment method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(ElementsConsumer, {\n        children: ({\n          elements,\n          stripe\n        }) => /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e, elements, stripe),\n          children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: backStep,\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              disabled: !stripe,\n              color: \"primary\",\n              children: [\"Pay \", checkoutToken.live.subtotal.formatted_with_symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PaymentForm, \"VPou8qkAwLi1HikDSEykuzmHzJc=\");\n\n_c = PaymentForm;\nexport default PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["C:/Users/Basu/Documents/GitHub/Grootmart/client/src/components/CheckoutForm/PaymentForm.js"],"names":["React","useContext","CheckoutContext","ProductContext","Typography","Button","Divider","Elements","CardElement","ElementsConsumer","loadStripe","commerce","Review","stripeKey","process","env","NODE_ENV","REACT_APP_STRIPE_PRIVATE_KEY","REACT_APP_STRIPE_PUBLIC_KEY","stripePromise","console","log","PaymentForm","checkoutToken","nextStep","backStep","shippingData","checkoutContext","productContext","setOrder","setErrorMessage","refreshCart","handleSubmit","event","elements","stripe","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","orderData","line_items","live","customer","firstname","firstName","lastname","lastName","email","shipping","name","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","id","handleCaptureCheckout","checkoutTokenId","newOrder","incomingOrder","checkout","capture","err","margin","e","display","justifyContent","subtotal","formatted_with_symbol"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport CheckoutContext from \"../../context/checkout/checkoutContext\";\r\nimport ProductContext from \"../../context/product/productContext\";\r\nimport { Typography, Button, Divider } from \"@material-ui/core\";\r\nimport {\r\n  Elements,\r\n  CardElement,\r\n  ElementsConsumer,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport Review from \"./Review\";\r\nlet stripeKey;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  stripeKey = process.env.REACT_APP_STRIPE_PRIVATE_KEY;\r\n} else {\r\n  stripeKey = process.env.REACT_APP_STRIPE_PUBLIC_KEY;\r\n}\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51JO0sMHHJ4wHPkUIyGozD6odMhaZeYXuOXos3a5cuSTGjIoj9hwy8BKqw4wOdvEwla8otJ7CpJpSncusQAYyeVTY00MtdnuORg\"\r\n);\r\nconsole.log(process.env.NODE_ENV);\r\nconsole.log(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\nconst PaymentForm = ({ checkoutToken, nextStep, backStep, shippingData }) => {\r\n  const checkoutContext = useContext(CheckoutContext);\r\n  const productContext = useContext(ProductContext);\r\n  const { setOrder, setErrorMessage } = checkoutContext;\r\n  const { refreshCart } = productContext;\r\n  const handleSubmit = async (event, elements, stripe) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) return;\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n\r\n    try {\r\n      const orderData = {\r\n        line_items: checkoutToken.live.line_items,\r\n        customer: {\r\n          firstname: shippingData.firstName,\r\n          lastname: shippingData.lastName,\r\n          email: shippingData.email,\r\n        },\r\n        shipping: {\r\n          name: \"International\",\r\n          street: shippingData.address1,\r\n          town_city: shippingData.city,\r\n          county_state: shippingData.shippingSubdivision,\r\n          postal_zip_code: shippingData.zip,\r\n          country: shippingData.shippingCountry,\r\n        },\r\n        fulfillment: { shipping_method: shippingData.shippingOption },\r\n        payment: {\r\n          gateway: \"stripe\",\r\n          stripe: {\r\n            payment_method_id: paymentMethod.id,\r\n          },\r\n        },\r\n      };\r\n\r\n      // onCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n      // Handle capture checkout\r\n      const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\r\n        try {\r\n          const incomingOrder = await commerce.checkout.capture(\r\n            checkoutTokenId,\r\n            newOrder\r\n          );\r\n\r\n          setOrder(incomingOrder);\r\n\r\n          refreshCart();\r\n        } catch (error) {\r\n          setErrorMessage(error);\r\n        }\r\n      };\r\n\r\n      handleCaptureCheckout(checkoutToken.id, orderData);\r\n\r\n      nextStep();\r\n    } catch (err) {\r\n      console.error(`${error}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Review checkoutToken={checkoutToken} />\r\n      <Divider />\r\n      <Typography variant='h6' gutterBottom style={{ margin: \"20px 0\" }}>\r\n        Payment method\r\n      </Typography>\r\n      <Elements stripe={stripePromise}>\r\n        <ElementsConsumer>\r\n          {({ elements, stripe }) => (\r\n            <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n              <CardElement />\r\n              <br /> <br />\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <Button variant='outlined' onClick={backStep}>\r\n                  Back\r\n                </Button>\r\n                <Button\r\n                  type='submit'\r\n                  variant='contained'\r\n                  disabled={!stripe}\r\n                  color='primary'\r\n                >\r\n                  Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </ElementsConsumer>\r\n      </Elements>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"]},"metadata":{},"sourceType":"module"}